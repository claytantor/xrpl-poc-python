@startuml xUrl_sequence

actor User as User
participant xumm as xumm
participant xummAPI as xummAPI
participant webApp as webApp
participant xummDeeplinkBackend as xummDeeplinkBackend

User -> webApp: Generate xapp deep link QR Code
User -> xumm: open scan tab
xumm -> webApp: Scan xapp deep link QR code
xumm -> xummAPI: Get xapp deep link data
xummAPI -> xummDeeplinkBackend: call deeplink backend to generate payload
xummDeeplinkBackend -> xumm: redirect to xumm with payload ['next']['always']
xumm -> User: show signing screen
User -> xumm: sign transaction

https://xumm.app/detect/xapp:sandbox.32849dc99872?shop_id=18f67a8d&subject=postaladdress&sid=1&vid=share



' actor Requestor as Requestor
' actor "Payer Wallet" as Payer
' participant "xURL Enabled App" as xUrlApp
' participant "xUrl App Backend" as xUrlBackend

' Requestor -> "XRP Ledger": Create Wallet

' group Payment Item Creation
'     Requestor -> xUrlApp: Sign in and get JWT credentials
'     Requestor -> xUrlBackend: Use Wallet Credentials to Create Payment Item\n(with id, description, amount, currency, etc.)
'     note left: the backend allows for new invoices\nto be created and tracked
'     xUrlBackend -> xUrlBackend: Create Payment\nItem in Database
'     xUrlBackend -> xUrlBackend: Generate xUrl
'     xUrlBackend -> Requestor: Return xUrl
' end

' group Payment
'     Requestor -> "Payer": Sends xUrl
'     Payer -> xUrlApp: Scans OR
'     Payer -> xUrlApp: Clicks "Payment link"
'     note left: the app could be a mobile \napp like xumm or another \nwallet that supports xUrl \ngenerated XRP payloads \nthe content type would need to \nbe able to launch the app \nthat will sign the transaction
'     Payer-> xUrlBackend: Lookup Payment Item by Id
'     xUrlBackend -> xUrlBackend: Get Payment Item from Database
'     xUrlBackend -> xUrlBackend: Business Logic to determine if payment\nis valid, covert to XRP, etc.
'     xUrlBackend -> xUrlBackend: Build XRP Transaction Payload
'     xUrlBackend -> xUrlApp: Return XRP Transaction Payload
'     Payer -> xUrlApp: Sign Transaction
'     xUrlApp -> "XRP Ledger": Send Transaction
'     note left: the app uses an SDK that allows\nfor interaction with the both\nthe wallet and the XRP ledger
' xUrlApp -> xUrlBackend: POST signed\n"TX"
' end

' group Backend Event Listener
' xUrlBackend -> "XRP Ledger": Listen for\n"TX" to be paid state
' note left: this could be a webhook\nor a listener on the XRP\nledger
' xUrlBackend -> xUrlBackend: Update Payment Item in Database
' xUrlBackend -> xUrlBackend: Lookup Action Response for\nPayment Item in xURL
' xUrlBackend -> xUrlBackend: Perform Action Response \nOrchestrations
' end


@enduml